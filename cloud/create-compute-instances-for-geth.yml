- hosts:
    - localhost
  vars_files:
    - consts.yml
    - ../var.yml
  vars:
    server_name:          "{{ ethnode }}"
    service_account_name: ethnode-service-account
    name_of_ip:           "{{ ethnode }}-ip"
  pre_tasks:
    - fail: msg="Please supply a value for ethnode variable. Valid values are{{ ":" }} 'ethnode-testnet' and 'ethnode-mainnet'"
      when: ethnode not in ["ethnode-testnet", "ethnode-mainnet"]
  roles:
    - reserve_static_ip
    - { role: create_service_account, service_account_display_name: EthnodeServiceAccount }
  tasks:
    - block:
        - name:   Check if blockchain disk for the "{{ ethnode }}" instance already exists
          shell: >
              gcloud compute disks list
              --project   {{ gke.project }}
              | grep {{ ethnode }}-blockchain-disk
          register:      disk_result
          ignore_errors: yes

        - name:  Check if firewall rule that allows TCP traffic exists
          shell: >
              gcloud compute firewall-rules list
              --format      json
              --project     {{ gke.project }}
              | grep allow-ethnode-traffic
          register:      firewall_rules_result
          ignore_errors: yes
        - name:    Create blockchain disk for the "{{ ethnode }}" instance
          command: >
              gcloud compute disks create {{ ethnode }}-blockchain-disk
              --type        {{ ethnode_config[ethnode].disk_type }}
              --size        {{ ethnode_config[ethnode].disk_size }}
              --description "Persistent disk attached to the {{ ethnode }} instance"
              --project     {{ gke.project }}
              --zone        {{ gke.zone }}
          when: disk_result.stdout == ""

        - name:    Machine running Ethereum client {{ "(" }}{{ ethnode }}{{ ")" }}
          command: >
              gcloud compute instances create {{ ethnode }}
              --description      "Vm instance that contain ethereum client with block"
              --disk             name={{ ethnode }}-blockchain-disk
              --machine-type     {{ ethnode_config[ethnode].machine_type }}
              --address          {{ name_of_ip }}
              --service-account  {{ service_account_name }}@{{ gke.project }}.iam.gserviceaccount.com
              --project          {{ gke.project }}
              --zone             {{ gke.zone }}

        - name: Add firewall rule to allow TCP traffic to the "{{ ethnode }}" instance
          command: >
              gcloud compute firewall-rules create allow-ethnode-traffic
              --allow        tcp:8545
              --priority     1000
              --direction    ingress
               --project     {{ gke.project }}
              --target-tags  ethnode-instance
          when: firewall_rules_result.stdout == ""

        - name: Enable firewall rule for the "{{ ethnode }}" instance
          command: >
              gcloud compute instances add-tags {{ ethnode }}
              --tags        ethnode-instance
              --project     {{ gke.project }}
              --zone        {{ gke.zone }}
