# The address of the Docker registry that Kubernetes pulls images from.
docker_registry: gcr.io/devel-concent-golem-network

image_prefix: concent-

# These people receive e-mail notifications about bugs, statistics, events, systems status etc.
#admins:
#  - name: cameel
#    mail: kamil.sliwak@codepoets.it

# Connection parameters of our PostgreSQL server on control cluster
#control_database_name: concent
#control_database_user: concent_user
control_database_host: 35.198.142.52

# Connection parameters of our PostgreSQL server on storage cluster
#storage_database_name: storage_concent
#storage_database_user: storage_concent_user
storage_database_host: "{{ control_database_host }}"

email:
  host:               smtp.sendgrid.net
  port:               2525
  user:               apikey
  use_tls:            true
  default_from_email: no-reply@concent.golem.network
  server_email:       no-reply@concent.golem.network

#gke:
#  service_account_name: concent-builder-service
#  project:              devel-concent-golem-network
#  zone:                 europe-west3-a

# Maximum size of individual files that can be uploaded to nginx-storage
#max_upload_size:    300m

# Address of conductor endpoint for sending notification when a file is uploaded used by nginx-storage
# The string with url path must end with slash, for example "http://conductor.default.svc.cluster.local/conductor/report-upload/",
# not "http://conductor.default.svc.cluster.local/conductor/report-upload"
# The first problem is that this variable is combined with the path to the file, so the result of this connection without the end slash
# would look like this: http://conductor.default.svc.cluster.local/conductor/report-uploadblender/result/ef0dc1/ef0dc1.zzz523.zip, they don't work
# The second problem is that the attacker will be able to modify path to another path,
# like this: http://conductor.default.svc.cluster.local/conductor/report-upload-attacker-path/blender/result/ef0dc1/ef0dc1.zzz523.zip
upload_report_url: "http://conductor.default.svc.cluster.local/conductor/report-upload/"

# When enabled, special timing settings are inserted into Concent's config map.
# These settings make protocol times significantly shorter, allowing us to efficiently
# run tests against a live cluster.
fast_timing: false

# Variable which enable or disable debug info in error responses in django apps
allow_debug_info_in_error_responses: True

# Variable which enable or disable deploying signing-service on the cluster
#signing_service_on_the_cluster: false

# Variable which enable or disable signing-service authentication on the cluster
#allow_signing_service_authentication: false


# Determines whether the control cluster supports HTTPS or HTTP.
# When HTTPS is enabled, all HTTP connections get redirected to HTTPS.
#nginx_proxy_allow_http:   false

# Determines whether the storage cluster supports HTTPS or HTTP.
# NOTE: Currently there's no separate storage cluster and all its components (including nginx-storage)
# are actually deployed to the control cluster. Therefore, as long as nginx-proxy has SSL enabled, all connections
# from the outside to nginx-storage go over HTTPS too.
#nginx_storage_allow_http: true

# Variable contain `concent_public_key` from the `dev` and `staging` clusters.
# They are used by signing-service.
#concent_public_key: 85cZzVjahnRpUBwm0zlNnqTdYom1LF1P1WNShLg17cmhN2Us

# Address of concent ethereum public_key to be attached to concent-api
#concent_ethereum_public_key: "cd53fdaa9e9f79b16b39b55d7936d2735071b6af8b7860f0bc40aa80cded80060f05cf189aec96f977a1dbc589b48b69bc529f8f5059274f0f541218c76ce136"

# Adress of concent GNTDeposit contract
#gnt_deposit_address: "0xcfB81A6EE3ae6aD4Ac59ddD21fB4589055c13DaD"

# The number of application replicas
#replicas_count:
#  verifier: 2

# This two variables decide which golem-messages versions are supported and
# whether two versions or one are supported.
# They are depend on the `load_balancer_turned_on` variable that enables routing.
# This variable should be insert in one of the concent versions(one of the clusters).
# The previous_golem_messages_version variable controls routing of the previous golem-messages version to the second cluster.
# When the variable is empty, the traffic to second cluster is disabled and only the current golem-messages version is supported.
# We use only the minor and major version number to check compatibility
#current_golem_messages_version:  2.15
#previous_golem_messages_version: 2.14

# This variable specify previous concent version in case we support two versions of concent with different golem-messages.
# The value of it must be equal to the second dictionary key.
#previous_concent_version:        v0.9.0-78-g4dc8cec

# Dictionary with clusters parameters and concent versions.
# We support a maximum of two concent versions(one cluster for each version).
#concent_versions:
  # Specific concent version which contain specific version of golem-messages.
  #v0.10.2:
    # This variable decide whether the routing are enabled or disabled on this concent version(on this cluster).
    # Remember the routing should be enable only on the current concent version which contain current golem-messages version.
    #load_balancer_turned_on:         true

    # External IP that can be used as the entry point to the cluster.
    # Will be assigned to the nginx-proxy service.
    #external_ip: a.b.c.d

    # Domain name pointing at the entry point to the control cluster.
    #cluster_address: concent.golem.network

    # Domain name pointing at the entry point to the storage cluster.
    # Currently control and storage are the same cluster but this will change in the future.
    #storage_cluster_address: {{ cluster_address }}

    # These addresses are the only values allowed in the HTTP Host header.
    # All requests with a different value will be rejected by Django.
    # NOTE: The Host header is specified by the client and might not even match our
    # own IP or domain. That's exactly why this whitelist exists.
    #allowed_hosts:
    #- "{{ external_ip }}"
    #- "{{ cluster_address }}"

    # Version of concent-deployment repository to be deployed.
    # You can use braches, tags or commit IDs here.
    #versions:
    #  concent-deployment:        master

    # Name of the persistent disk to be attached to nginx-storage
    #nginx_storage_disk: concent-storage

    # Name of the persistent disk to be attached to geth
    #geth_disk:          concent-ethereum-storage

    # Name of the persistent disk to be attached to rabbitmq
    #rabbitmq_disk: queue-storage

    # The name of the cluster on which the specified version of the concent will be deployed
    #gke:
    #  cluster:              concent-dev
